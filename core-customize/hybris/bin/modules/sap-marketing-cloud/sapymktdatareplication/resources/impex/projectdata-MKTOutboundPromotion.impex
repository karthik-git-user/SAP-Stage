$cpiTenantHostName=https://tester.hana.ondemand.com

# -----------------------------------------------------------------------
# Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
# -----------------------------------------------------------------------
$ruleStatusFilter=({{ select {rs.pk} from {RuleStatus AS rs} where {rs.code} in ('PUBLISHED','INACTIVE') }})
 
################################################################
# This sets up the credential (username/password) called "mktCPIBasicCredentails"
# ##############################################################
INSERT_UPDATE BasicCredential ; id[unique = true]      ; username ; password 
                              ; mktCPIBasicCredentails ; username ; password 
                              
###############################################################
# This sets up the endpoint called "mktCPIPromotionEndpoint."
# #############################################################
INSERT_UPDATE Endpoint ; id[unique = true]       ; version[unique = true] ; name                    ; specUrl                                                                                                             
                       ; mktCPIPromotionEndpoint ; unknown                ; mktCPIPromotionEndpoint ; "$cpiTenantHostName/gw/odata/SAP/REPLICATE-PROMOTION-FROM-SAP-COMMERCE-CLOUD-TO-SAP-MARKETING-CLOUD;v=1/$metadata" 
                       
##############################################################
# This sets up a ConsumedDestination called "mktCPIPromotionDestination."
# It uses the Endpoint and BasicCredential created above. The user calls
# the Outbound Service with the destination ID (e.g. "mktCPIPromotionDestination").
# The Outbound Service looks up the details of the destination by ID,
# so it knows where to send the data
# ############################################################
INSERT_UPDATE DestinationTarget ; id[unique = true]                
                                ; mktCPIPromotionDestinationTarget 
                                
INSERT_UPDATE ConsumedDestination ; id[unique = true]          ; url                                                                                                                            ; endpoint(id, version)           ; credential(id)         ; destinationTarget(id)[default = mktCPIPromotionDestinationTarget] ; additionalProperties(key, value)[map-delimiter=|]                                                                  
                                  ; mktCPIPromotionDestination ; "$cpiTenantHostName/gw/odata/SAP/REPLICATE-PROMOTION-FROM-SAP-COMMERCE-CLOUD-TO-SAP-MARKETING-CLOUD;v=1/PromotionSourceRules" ; mktCPIPromotionEndpoint:unknown ; mktCPIBasicCredentails ;                                                                   ; "csrfURL->$cpiTenantHostName/gw/odata/SAP/REPLICATE-PROMOTION-FROM-SAP-COMMERCE-CLOUD-TO-SAP-MARKETING-CLOUD;v=1" 
                                  
################################################################
# Setup Outbound Sync configuration container
# ##############################################################
INSERT_UPDATE OutboundSyncStreamConfigurationContainer ; id[unique = true]                     ;  
                                                       ; mktCPIPromotionOutboundSyncDataStream ;  
                                                       
                                                       
INSERT_UPDATE OutboundSyncJob ; code[unique = true]                 ; streamConfigurationContainer(id)      
                              ; mktCPIoDataPromotionOutboundSyncJob ; mktCPIPromotionOutboundSyncDataStream 
                              
INSERT_UPDATE OutboundChannelConfiguration ; code[unique = true]                ; integrationObject(code) ; destination(id)            
                                           ; outboundSyncMktCPIPromotionChannel ; MKTOutboundPromotion    ; mktCPIPromotionDestination 
                                           
# Set up a Promotion stream that will detect changes made to the Promotion and include it in the mktCPIPromotionOutboundSyncDataStream StreamConfigurationContainer
INSERT_UPDATE OutboundSyncStreamConfiguration ; streamId[unique = true]       ; container(id)                         ; itemTypeForStream(code) ; outboundChannelConfiguration(code) ; whereClause                        ;  
                                              ; mktCPIPromotionOutboundStream ; mktCPIPromotionOutboundSyncDataStream ; PromotionSourceRule     ; outboundSyncMktCPIPromotionChannel ; {item.status} IN $ruleStatusFilter 
                                              
INSERT_UPDATE OutboundSyncCronJob ; code[unique = true]                ; job(code)                           ; sessionLanguage(isoCode)[default = en] 
                                  ; mktCPIPromotionOutboundSyncCronJob ; mktCPIoDataPromotionOutboundSyncJob ;                                        
